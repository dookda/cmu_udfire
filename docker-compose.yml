version: "3.3"
services:

  postgis:
    image: postgis/postgis
    container_name: pymodis_postgis
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=geodb
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/geodb.sql:/docker-entrypoint-initdb.d/geodb.sql

  nodejs:
    image: "node"
    container_name: pymodis_nodejs
    working_dir: /app/nodejs
    restart: always
    depends_on:
      - postgis
    environment:
      - NODE_ENV=production
    volumes:
      - ./nodejs:/app/nodejs
    ports:
      - "3000:3000"
    command: bash -c "npm i && npm i -g nodemon && npm i -g pm2 && nodemon server.js"

  geoserver:
    container_name: pymodis_geoserver
    depends_on:
      - postgis
    image: tomcat:8.5.79-jre8
    volumes:
      - ./tomcat/:/usr/local/tomcat/webapps/
      - ./tomcat/fonts/truetype/:/usr/share/fonts/truetype/
      - ./pymodis/ndvi_clip/:/usr/local/tomcat/webapps/geoserver/data/ndvi_clip/
      - ./pymodis/ndwi_clip/:/usr/local/tomcat/webapps/geoserver/data/ndwi_clip/
      - ./pymodis/ndmi_clip/:/usr/local/tomcat/webapps/geoserver/data/ndmi_clip/
    ports:
      - '8080:8080'

  pymodis:
    container_name: pymodis
    build: ./pymodis
    depends_on:
      - postgis
      - geoserver
    volumes:
      - ./pymodis:/app/pymodis
    command: bash -c "cd pymodis && python3 app.py"

  flask:
    container_name: pymodis_flask
    build: ./flaskapi
    restart: always
    depends_on:
      - postgis
      - geoserver
    volumes:
      - ./flaskapi:/app/flaskapi
      - ./pymodis/ndvi_clip/:/app/flaskapi/ndvi_clip/
      - ./pymodis/ndwi_clip/:/app/flaskapi/ndwi_clip/
      - ./pymodis/ndmi_clip/:/app/flaskapi/ndmi_clip/
    ports:
      - "3100:3100"
    command: bash -c "cd flaskapi && python3 app.py"
